{"version":3,"sources":["Header/Header.js","Map/Map.js","reportWebVitals.js","index.js"],"names":["Header","className","containerStyle","window","google","width","height","center","lat","lng","options","Map","React","useState","setMap","onLoad","useCallback","map","bounds","maps","LatLngBounds","fitBounds","onUnmount","googleMapsApiKey","mapContainerStyle","zoom","memo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oPAaeA,MAXf,WACE,OACE,qBAAKC,UAAU,SAAf,SACE,qBAAIA,UAAU,QAAd,UACE,sBAAMA,UAAU,UAAhB,gBADF,oB,sBCCAC,GAFSC,OAAOC,OAEC,CACrBC,MAAO,OACPC,OAAQ,UAGJC,EAAS,CACbC,IAAK,UACLC,KAAM,YAGFC,EAAU,GAMhB,SAASC,IAAO,IAAD,EACSC,IAAMC,SAAS,MADxB,mBACDC,GADC,WAGPC,EAASH,IAAMI,aAAY,SAAkBC,GACjD,IAAMC,EAAS,IAAIf,OAAOC,OAAOe,KAAKC,aACtCH,EAAII,UAAUH,GACdJ,EAAOG,KACN,IAEGK,EAAYV,IAAMI,aAAY,SAAkBC,GACpDH,EAAO,QACN,IAEH,OACE,cAAC,IAAD,CAAYS,iBAAiB,0CAA7B,SACE,cAAC,IAAD,CACEC,kBAAmBtB,EACnBK,OAAQA,EACRkB,KAAM,GACNV,OAAQA,EACRO,UAAWA,EACXZ,QAASA,MAMFE,UAAMc,KAAKf,GCrCXgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f67cb8c3.chunk.js","sourcesContent":["import './Header.css';\n\nfunction Header() {\n  return (\n    <div className='header'>\n      <h1 className='title'>\n        <span className='sfTitle'>SF</span>\n        Food Trucks\n      </h1>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './Map.css';\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\n\nconst google = window.google;\n\nconst containerStyle = {\n  width: '100%',\n  height: '100vh',\n};\n\nconst center = {\n  lat: 37.763972,\n  lng: -122.431297,\n};\n\nconst options = {\n  // mapTypeControlOptions: {\n  //   position: google.maps.ControlPosition.BOTTOM_CENTER,\n  // },\n};\n\nfunction Map() {\n  const [map, setMap] = React.useState(null);\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  return (\n    <LoadScript googleMapsApiKey='AIzaSyD5-3ZGgtuwr7k9FbfW34NkgqZSdONWgEU'>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={13}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n        options={options}\n      ></GoogleMap>\n    </LoadScript>\n  );\n}\n\nexport default React.memo(Map);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Header from './Header/Header';\nimport Map from './Map/Map';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <Map />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}